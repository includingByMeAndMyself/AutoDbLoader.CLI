using AutoDbLoader.DAL.txt.Entity;
using AutoDbLoader.DAL.txt.Infrastructure;
using AutoDbLoader.CLI.Infrastructure;
using NUnit.Framework;
using System;

namespace AutoDbLoader.Test
{
    public class ValidKeyTests
    {
        [SetUp]
        public void Setup()
        {
            
        }

        private Payment GetDataForTest(string data)
        {
            var paymentsInfo = data.Split(";");

            return new Payment
            {
                Payer = paymentsInfo[Constant.PAY_PAYER],
                Address = paymentsInfo[Constant.PAY_ADDRESS],
                PersonalAccount = paymentsInfo[Constant.PAY_PERSONAL_ACCOUNT],
                Debt = paymentsInfo[Constant.PAY_DEBT].Replace(',', '.'),
                BIK = paymentsInfo[Constant.PAY_BIK],
                PaymentAccount = paymentsInfo[Constant.PAY_PAYMENT_ACCOUNT],
                INN = paymentsInfo[Constant.PAY_INN],
                Recipient = paymentsInfo[Constant.PAY_RECIPIENT],
                IndicationPeriod = paymentsInfo[Constant.PAY_INDICATION_PERIOD],
                IndicationsOfMeteringDevices = paymentsInfo[Constant.PAY_INDICATION_OF_METERING_DEVICES],
                Alias = String.Empty
            };
        }


        #region Провекра корректности проставления ключа для ЖКУ

        [Test]
        [TestCase("плательщик;Екатеринбург г, Академика Вонсовского ул, д.21 кв. 418;л/c;111.11;БИК;40702810516540062879;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Водоемная ул, д.76 кв. 2;л/c;111.11;БИК;40702810216540013911;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Водоемная ул, д.76 офис 2;л/c;111.11;БИК;40702810216540013911;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.5 кв.87;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.10 кв.62;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.4 кв.43;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        public void ParseAddressForJKU_ShouldReturnTrue(string data)
        {
            //arrage

            var expectedResult = true;
            var payment = GetDataForTest(data);

            //act

            var result = Validator.IsJKU(payment);

            //assert

            Assert.IsNotNull(result);
            Assert.IsNotEmpty(result.ToString());

            Assert.AreEqual(expectedResult, result);
        }


        [Test]
        [TestCase("плательщик;Екатеринбург г, Раевского ул, д.4 кв. 37;л/c;111.11;БИК;40702810616540062876;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а стр.паркинг п/м 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.5 офис;л/c;111.11;БИК;40705810416540002460;6658391019;ООО УЖК \"Территория - Юг\";период;")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.3 стр.паркинг п/м 95;л/c;111.11;БИК;40702810216540062878;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Раевского ул, д.4 кв. 37;л/c;111.11;БИК;40821810116540000361;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а п/м 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а стр.паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.5 офис;л/c;111.11;БИК;40705810116540002760;6658213898;ООО УЖК \"Территория - Юг\";период;")]
        [TestCase("плательщик;Екатеринбург г, Сиреневый б-р, д.8 пом. 1;л/c;111.11;БИК;40705810816540001061;6670060542;ТСЖ \"Сиреневый бульвар, 8\";период;")]
        public void ParseAddressForJKU_ShouldReturnFalse(string data)
        {
            //arrage

            var expectedResult = false;
            var payment = GetDataForTest(data);

            //act

            var result = Validator.IsJKU(payment);

            //assert

            Assert.IsNotNull(result);
            Assert.IsNotEmpty(result.ToString());

            Assert.AreEqual(expectedResult, result);
        }


        #endregion

        #region Проверка корректности проставления ключа для охраны

        [Test]
        [TestCase("плательщик;Екатеринбург г, Раевского ул, д.4 кв. 37;л/c;111.11;БИК;40702810616540062876;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Раевского ул, д.4 кв. 37;л/c;111.11;БИК;40821810116540000361;6679065175;ООО \"Центр расчетов\";период;")]
        public void ParseAddressForSecurity_ShouldReturnTrue(string data)
        {
            //arrage

            var expectedResult = true;
            var payment = GetDataForTest(data);

            //act

            var result = Validator.IsSecurity(payment);

            //assert

            Assert.IsNotNull(result);
            Assert.IsNotEmpty(result.ToString());

            Assert.AreEqual(expectedResult, result);
        }


        [Test]
        [TestCase("плательщик;Екатеринбург г, Раевского ул, д.4 кв. 37;л/c;111.11;БИК;40702810616540062876;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Академика Вонсовского ул, д.21 кв. 418;л/c;111.11;БИК;40702810516540062879;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Водоемная ул, д.76 кв. 2;л/c;111.11;БИК;40702810216540013911;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Водоемная ул, д.76 офис 2;л/c;111.11;БИК;40702810216540013911;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Академика Вонсовского ул, д.21 кв. 418;л/c;111.11;БИК;40702810516540062879;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Водоемная ул, д.76 кв. 2;л/c;111.11;БИК;40702810216540013911;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Водоемная ул, д.76 офис 2;л/c;111.11;БИК;40702810216540013911;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.5 кв.87;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.10 кв.62;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.4 кв.43;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а стр.паркинг п/м 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а п/м 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а стр.паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.5 офис;л/c;111.11;БИК;40705810116540002760;6658213898;ООО УЖК \"Территория - Юг\";период;")]
        [TestCase("плательщик;Екатеринбург г, Сиреневый б-р, д.8 пом. 1;л/c;111.11;БИК;40705810816540001061;6670060542;ТСЖ \"Сиреневый бульвар, 8\";период;")]

        public void ParseAddressForSecurity_ShouldReturnFalse(string data)
        {
            //arrage

            var expectedResult = false;
            var payment = GetDataForTest(data);

            //act

            var result = Validator.IsSecurity(payment);

            //assert

            Assert.IsNotNull(result);
            Assert.IsNotEmpty(result.ToString());

            Assert.AreEqual(expectedResult, result);
        }


        #endregion

        #region Проверка корректности проставления ключа для паркинга

        [Test]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а стр.паркинг п/м 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а п/м 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а стр.паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;")]
        public void ParseAddressForParcing_ShouldReturnTrue(string data)
        {
            //arrage

            var expectedResult = true;

            var payment = GetDataForTest(data);

            //act

            var result = Validator.IsParking(payment);

            //assert

            Assert.IsNotNull(result);
            Assert.IsNotEmpty(result.ToString());

            Assert.AreEqual(expectedResult, result);
        }

        [Test]
        [TestCase("плательщик;Екатеринбург г, Луганская ул, д.6 стр.паркинг п/м 46;л/c;111.11;БИК;40705810216540002644;6658391019;ООО УЖК \"Территория - Юг\";период;")]
        [TestCase("плательщик;Екатеринбург г, Луганская ул, д.6 стр. 46;л/c;111.11;БИК;40705810216540002644;6658391019;ООО УЖК \"Территория - Юг\";период;")]
        [TestCase("плательщик;Екатеринбург г, Раевского ул, д.4 кв. 37;л/c;111.11;БИК;40702810616540062876;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Раевского ул, д.4 кв. 37;л/c;111.11;БИК;40821810116540000361;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Академика Вонсовского ул, д.21 кв. 418;л/c;111.11;БИК;40702810516540062879;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Водоемная ул, д.76 кв. 2;л/c;111.11;БИК;40702810216540013911;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Водоемная ул, д.76 офис 2;л/c;111.11;БИК;40702810216540013911;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.5 кв.87;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.10 кв.62;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.4 кв.43;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.5 офис;л/c;111.11;БИК;40705810116540002760;6658213898;ООО УЖК \"Территория - Юг\";период;")]
        [TestCase("плательщик;Екатеринбург г, Сиреневый б-р, д.8 пом. 1;л/c;111.11;БИК;40705810816540001061;6670060542;ТСЖ \"Сиреневый бульвар, 8\";период;")]
        public void ParseAddressForParcing_ShouldReturnFalse(string data)
        {
            //arrage

            var expectedResult = false;

            var payment = GetDataForTest(data);

            //act

            var result = Validator.IsParking(payment);

            //assert

            Assert.IsNotNull(result);
            Assert.IsNotEmpty(result.ToString());

            Assert.AreEqual(expectedResult, result);
        }

        #endregion

        #region Проверка корректности проставления ключа для капремонт

        [Test]
        [TestCase("плательщик;Екатеринбург г, Сиреневый б-р, д.8 пом. 1;л/c;111.11;БИК;40705810816540001061;6670060542;ТСЖ \"Сиреневый бульвар, 8\";период;")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.5 офис;л/c;111.11;БИК;40705810116540002760;6658213898;ООО УЖК \"Территория - Юг\";период;")]
        [TestCase("Носов Андрей Викторович;Екатеринбург г, Луганская ул, д.6 кв.102;63090610241;899.66;046577674;40705810216540002644;6658391019;ООО УЖК \"Территория - Юг\";022022;")]
        [TestCase("плательщик;Екатеринбург г, Сиреневый б-р, д.8 пом. 1;л/c;111.11;БИК;40705810816540001061;6670060542;ТСЖ \"Сиреневый бульвар, 8\";период;")]
        public void ParseAddressForSecurity_WithIndicationsOfMeteringDevices_ShouldReturnTrue(string data)
        {
            //arrage

            var expectedResult = true;
            var payment = GetDataForTest(data);

            //act

            var result = Validator.IsOverhaul(payment);

            //assert

            Assert.IsNotNull(result);
            Assert.IsNotEmpty(result.ToString());

            Assert.AreEqual(expectedResult, result);
        }


        [Test]
        [TestCase("плательщик;Екатеринбург г, Сиреневый б-р, д.8 пом. 1;л/c;111.11;БИК;40705810816540001061;6670060542;ТСЖ \"Сиреневый бульвар, 8\";период;показания")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.5 офис;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.3 стр.паркинг п/м 95;л/c;111.11;БИК;40702810216540062878;6679065175;ООО \"Центр расчетов\";период;показания")]
        [TestCase("плательщик;Екатеринбург г, Сиреневый б-р, д.8 пом. 1;л/c;111.11;БИК;40703810216090006752;6670060542;ТСЖ \"Сиреневый бульвар, 8\";период;показания")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а стр.паркинг п/м 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а п/м 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а стр.паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.6а паркинг 15;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Раевского ул, д.4 кв. 37;л/c;111.11;БИК;40702810616540062876;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Раевского ул, д.4 кв. 37;л/c;111.11;БИК;40821810116540000361;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Академика Вонсовского ул, д.21 кв. 418;л/c;111.11;БИК;40702810516540062879;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Водоемная ул, д.76 кв. 2;л/c;111.11;БИК;40702810216540013911;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Водоемная ул, д.76 офис 2;л/c;111.11;БИК;40702810216540013911;6679065175;ООО \"Центр расчетов\";период;")]
        [TestCase("плательщик;Екатеринбург г, Николая Островского ул, д.5 кв.87;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.10 кв.62;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        [TestCase("плательщик;Екатеринбург г, Орденоносцев ул, д.4 кв.43;л/c;111.11;БИК;40702810916540062877;6679065175;ООО \"Центр расчетов\";период;показания счетчиков")]
        public void ParseAddressForSecurity_WithIndicationsOfMeteringDevices_ShouldReturnFalse(string data)
        {
            //arrage

            var expectedResult = false;
            var payment = GetDataForTest(data);

            //act

            var result = Validator.IsOverhaul(payment);

            //assert

            Assert.IsNotNull(result);
            Assert.IsNotEmpty(result.ToString());

            Assert.AreEqual(expectedResult, result);
        }


        #endregion

    }
}
